// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Rcpp_Laplace
List Rcpp_Laplace(double rho, double lambda, int K, Function Dlogptheta, Function D2logptheta);
RcppExport SEXP _EpiLPS_Rcpp_Laplace(SEXP rhoSEXP, SEXP lambdaSEXP, SEXP KSEXP, SEXP DlogpthetaSEXP, SEXP D2logpthetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< Function >::type Dlogptheta(DlogpthetaSEXP);
    Rcpp::traits::input_parameter< Function >::type D2logptheta(D2logpthetaSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_Laplace(rho, lambda, K, Dlogptheta, D2logptheta));
    return rcpp_result_gen;
END_RCPP
}
// Rcpp_cubicBspline
NumericMatrix Rcpp_cubicBspline(NumericVector x, double lower, double upper, int K);
RcppExport SEXP _EpiLPS_Rcpp_cubicBspline(SEXP xSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_cubicBspline(x, lower, upper, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EpiLPS_Rcpp_Laplace", (DL_FUNC) &_EpiLPS_Rcpp_Laplace, 5},
    {"_EpiLPS_Rcpp_cubicBspline", (DL_FUNC) &_EpiLPS_Rcpp_cubicBspline, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EpiLPS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
